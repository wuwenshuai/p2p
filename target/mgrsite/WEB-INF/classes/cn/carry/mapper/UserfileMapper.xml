<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.carry.mapper.UserfileMapper" >
  <resultMap id="BaseResultMap" type="cn.carry.domain.Userfile" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="auditTime" property="audittime" jdbcType="TIMESTAMP" />
    <result column="applyTime" property="applytime" jdbcType="TIMESTAMP" />
    <result column="auditor_id" property="auditorId" jdbcType="BIGINT" />
    <result column="applier_id" property="applierId" jdbcType="BIGINT" />
    <result column="score" property="score" jdbcType="TINYINT" />
    <result column="file" property="file" jdbcType="VARCHAR" />
    <result column="filetype_id" property="filetypeId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    `id`, `state`, `remark`, `auditTime`, `applyTime`, `auditor_id`, `applier_id`, `score`, 
    `file`, `filetype_id`
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.carry.domain.UserfileExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `userfile`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.carry.domain.UserfileExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from `userfile`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="cn.carry.domain.Userfile" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `userfile`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        `id`,
      </if>
      <if test="state != null" >
        `state`,
      </if>
      <if test="remark != null" >
        `remark`,
      </if>
      <if test="audittime != null" >
        `auditTime`,
      </if>
      <if test="applytime != null" >
        `applyTime`,
      </if>
      <if test="auditorId != null" >
        `auditor_id`,
      </if>
      <if test="applierId != null" >
        `applier_id`,
      </if>
      <if test="score != null" >
        `score`,
      </if>
      <if test="file != null" >
        `file`,
      </if>
      <if test="filetypeId != null" >
        `filetype_id`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="audittime != null" >
        #{audittime,jdbcType=TIMESTAMP},
      </if>
      <if test="applytime != null" >
        #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null" >
        #{auditorId,jdbcType=BIGINT},
      </if>
      <if test="applierId != null" >
        #{applierId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        #{score,jdbcType=TINYINT},
      </if>
      <if test="file != null" >
        #{file,jdbcType=VARCHAR},
      </if>
      <if test="filetypeId != null" >
        #{filetypeId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.carry.domain.UserfileExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from `userfile`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `userfile`
    <set >
      <if test="record.id != null" >
        `id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.state != null" >
        `state` = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null" >
        `remark` = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.audittime != null" >
        `auditTime` = #{record.audittime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.applytime != null" >
        `applyTime` = #{record.applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditorId != null" >
        `auditor_id` = #{record.auditorId,jdbcType=BIGINT},
      </if>
      <if test="record.applierId != null" >
        `applier_id` = #{record.applierId,jdbcType=BIGINT},
      </if>
      <if test="record.score != null" >
        `score` = #{record.score,jdbcType=TINYINT},
      </if>
      <if test="record.file != null" >
        `file` = #{record.file,jdbcType=VARCHAR},
      </if>
      <if test="record.filetypeId != null" >
        `filetype_id` = #{record.filetypeId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `userfile`
    set `id` = #{record.id,jdbcType=BIGINT},
      `state` = #{record.state,jdbcType=TINYINT},
      `remark` = #{record.remark,jdbcType=VARCHAR},
      `auditTime` = #{record.audittime,jdbcType=TIMESTAMP},
      `applyTime` = #{record.applytime,jdbcType=TIMESTAMP},
      `auditor_id` = #{record.auditorId,jdbcType=BIGINT},
      `applier_id` = #{record.applierId,jdbcType=BIGINT},
      `score` = #{record.score,jdbcType=TINYINT},
      `file` = #{record.file,jdbcType=VARCHAR},
      `filetype_id` = #{record.filetypeId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.carry.domain.Userfile" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update `userfile`
    <set >
      <if test="state != null" >
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        `remark` = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="audittime != null" >
        `auditTime` = #{audittime,jdbcType=TIMESTAMP},
      </if>
      <if test="applytime != null" >
        `applyTime` = #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null" >
        `auditor_id` = #{auditorId,jdbcType=BIGINT},
      </if>
      <if test="applierId != null" >
        `applier_id` = #{applierId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        `score` = #{score,jdbcType=TINYINT},
      </if>
      <if test="file != null" >
        `file` = #{file,jdbcType=VARCHAR},
      </if>
      <if test="filetypeId != null" >
        `filetype_id` = #{filetypeId,jdbcType=BIGINT},
      </if>
    </set>
    where `id` = #{id,jdbcType=BIGINT}
  </update>
</mapper>