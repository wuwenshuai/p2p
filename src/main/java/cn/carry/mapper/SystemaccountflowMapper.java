package cn.carry.mapper;

import cn.carry.domain.Systemaccountflow;
import cn.carry.domain.SystemaccountflowExample;
import org.apache.ibatis.annotations.*;

import java.util.List;

public interface SystemaccountflowMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table systemaccountflow
     *
     * @mbggenerated
     */
    int countByExample(SystemaccountflowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table systemaccountflow
     *
     * @mbggenerated
     */
    int deleteByExample(SystemaccountflowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table systemaccountflow
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `systemaccountflow`",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table systemaccountflow
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `systemaccountflow` (`id`, `createdDate`, ",
        "`accountactiontype`, `amount`, ",
        "`note`, `balance`, `freezedAmount`, ",
        "`systemAccount_id`, `targetuser_id`)",
        "values (#{id,jdbcType=BIGINT}, #{createddate,jdbcType=TIMESTAMP}, ",
        "#{accountactiontype,jdbcType=TINYINT}, #{amount,jdbcType=DECIMAL}, ",
        "#{note,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL}, #{freezedamount,jdbcType=DECIMAL}, ",
        "#{systemaccountId,jdbcType=BIGINT}, #{targetuserId,jdbcType=BIGINT})"
    })
    int insert(Systemaccountflow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table systemaccountflow
     *
     * @mbggenerated
     */
    int insertSelective(Systemaccountflow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table systemaccountflow
     *
     * @mbggenerated
     */
    List<Systemaccountflow> selectByExample(SystemaccountflowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table systemaccountflow
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "`id`, `createdDate`, `accountactiontype`, `amount`, `note`, `balance`, `freezedAmount`, ",
        "`systemAccount_id`, `targetuser_id`",
        "from `systemaccountflow`",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    Systemaccountflow selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table systemaccountflow
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Systemaccountflow record, @Param("example") SystemaccountflowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table systemaccountflow
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Systemaccountflow record, @Param("example") SystemaccountflowExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table systemaccountflow
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Systemaccountflow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table systemaccountflow
     *
     * @mbggenerated
     */
    @Update({
        "update `systemaccountflow`",
        "set `createdDate` = #{createddate,jdbcType=TIMESTAMP},",
          "`accountactiontype` = #{accountactiontype,jdbcType=TINYINT},",
          "`amount` = #{amount,jdbcType=DECIMAL},",
          "`note` = #{note,jdbcType=VARCHAR},",
          "`balance` = #{balance,jdbcType=DECIMAL},",
          "`freezedAmount` = #{freezedamount,jdbcType=DECIMAL},",
          "`systemAccount_id` = #{systemaccountId,jdbcType=BIGINT},",
          "`targetuser_id` = #{targetuserId,jdbcType=BIGINT}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Systemaccountflow record);
}