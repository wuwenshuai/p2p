package cn.carry.mapper;

import cn.carry.domain.Account;
import cn.carry.domain.AccountExample;
import org.apache.ibatis.annotations.*;

import java.util.List;

public interface AccountMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated
     */
    int countByExample(AccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated
     */
    int deleteByExample(AccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `account`",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `account` (`id`, `tradePassword`, ",
        "`usableAmount`, `freezedAmount`, ",
        "`borrowLimitAmount`, `version`, ",
        "`unReceiveInterest`, `unReceivePrincipal`, ",
        "`unReturnAmount`, `remainBorrowLimit`)",
        "values (#{id,jdbcType=BIGINT}, #{tradepassword,jdbcType=VARCHAR}, ",
        "#{usableamount,jdbcType=DECIMAL}, #{freezedamount,jdbcType=DECIMAL}, ",
        "#{borrowlimitamount,jdbcType=DECIMAL}, #{version,jdbcType=INTEGER}, ",
        "#{unreceiveinterest,jdbcType=DECIMAL}, #{unreceiveprincipal,jdbcType=DECIMAL}, ",
        "#{unreturnamount,jdbcType=DECIMAL}, #{remainborrowlimit,jdbcType=DECIMAL})"
    })
    int insert(Account record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated
     */
    int insertSelective(Account record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated
     */
    List<Account> selectByExample(AccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "`id`, `tradePassword`, `usableAmount`, `freezedAmount`, `borrowLimitAmount`, ",
        "`version`, `unReceiveInterest`, `unReceivePrincipal`, `unReturnAmount`, `remainBorrowLimit`",
        "from `account`",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    Account selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Account record, @Param("example") AccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Account record, @Param("example") AccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Account record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbggenerated
     */
    @Update({
        "update `account`",
        "set `tradePassword` = #{tradepassword,jdbcType=VARCHAR},",
          "`usableAmount` = #{usableamount,jdbcType=DECIMAL},",
          "`freezedAmount` = #{freezedamount,jdbcType=DECIMAL},",
          "`borrowLimitAmount` = #{borrowlimitamount,jdbcType=DECIMAL},",
          "`version` = #{version,jdbcType=INTEGER},",
          "`unReceiveInterest` = #{unreceiveinterest,jdbcType=DECIMAL},",
          "`unReceivePrincipal` = #{unreceiveprincipal,jdbcType=DECIMAL},",
          "`unReturnAmount` = #{unreturnamount,jdbcType=DECIMAL},",
          "`remainBorrowLimit` = #{remainborrowlimit,jdbcType=DECIMAL}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Account record);
}