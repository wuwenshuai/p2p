package cn.carry.mapper;

import cn.carry.domain.Rechargeoffline;
import cn.carry.domain.RechargeofflineExample;
import org.apache.ibatis.annotations.*;

import java.util.List;

public interface RechargeofflineMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rechargeoffline
     *
     * @mbggenerated
     */
    int countByExample(RechargeofflineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rechargeoffline
     *
     * @mbggenerated
     */
    int deleteByExample(RechargeofflineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rechargeoffline
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `rechargeoffline`",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rechargeoffline
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `rechargeoffline` (`id`, `state`, ",
        "`remark`, `auditTime`, ",
        "`applyTime`, `auditor_id`, ",
        "`applier_id`, `tradeCode`, ",
        "`tradeTime`, `amount`, ",
        "`note`, `bankinfo_id`)",
        "values (#{id,jdbcType=BIGINT}, #{state,jdbcType=TINYINT}, ",
        "#{remark,jdbcType=VARCHAR}, #{audittime,jdbcType=TIMESTAMP}, ",
        "#{applytime,jdbcType=TIMESTAMP}, #{auditorId,jdbcType=BIGINT}, ",
        "#{applierId,jdbcType=BIGINT}, #{tradecode,jdbcType=VARCHAR}, ",
        "#{tradetime,jdbcType=TIMESTAMP}, #{amount,jdbcType=DECIMAL}, ",
        "#{note,jdbcType=VARCHAR}, #{bankinfoId,jdbcType=BIGINT})"
    })
    int insert(Rechargeoffline record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rechargeoffline
     *
     * @mbggenerated
     */
    int insertSelective(Rechargeoffline record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rechargeoffline
     *
     * @mbggenerated
     */
    List<Rechargeoffline> selectByExample(RechargeofflineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rechargeoffline
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "`id`, `state`, `remark`, `auditTime`, `applyTime`, `auditor_id`, `applier_id`, ",
        "`tradeCode`, `tradeTime`, `amount`, `note`, `bankinfo_id`",
        "from `rechargeoffline`",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    Rechargeoffline selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rechargeoffline
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Rechargeoffline record, @Param("example") RechargeofflineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rechargeoffline
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Rechargeoffline record, @Param("example") RechargeofflineExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rechargeoffline
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Rechargeoffline record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rechargeoffline
     *
     * @mbggenerated
     */
    @Update({
        "update `rechargeoffline`",
        "set `state` = #{state,jdbcType=TINYINT},",
          "`remark` = #{remark,jdbcType=VARCHAR},",
          "`auditTime` = #{audittime,jdbcType=TIMESTAMP},",
          "`applyTime` = #{applytime,jdbcType=TIMESTAMP},",
          "`auditor_id` = #{auditorId,jdbcType=BIGINT},",
          "`applier_id` = #{applierId,jdbcType=BIGINT},",
          "`tradeCode` = #{tradecode,jdbcType=VARCHAR},",
          "`tradeTime` = #{tradetime,jdbcType=TIMESTAMP},",
          "`amount` = #{amount,jdbcType=DECIMAL},",
          "`note` = #{note,jdbcType=VARCHAR},",
          "`bankinfo_id` = #{bankinfoId,jdbcType=BIGINT}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Rechargeoffline record);
}