package cn.carry.mapper;

import cn.carry.domain.Userfile;
import cn.carry.domain.UserfileExample;
import org.apache.ibatis.annotations.*;

import java.util.List;

public interface UserfileMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userfile
     *
     * @mbggenerated
     */
    int countByExample(UserfileExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userfile
     *
     * @mbggenerated
     */
    int deleteByExample(UserfileExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userfile
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `userfile`",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userfile
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `userfile` (`id`, `state`, ",
        "`remark`, `auditTime`, ",
        "`applyTime`, `auditor_id`, ",
        "`applier_id`, `score`, ",
        "`file`, `filetype_id`)",
        "values (#{id,jdbcType=BIGINT}, #{state,jdbcType=TINYINT}, ",
        "#{remark,jdbcType=VARCHAR}, #{audittime,jdbcType=TIMESTAMP}, ",
        "#{applytime,jdbcType=TIMESTAMP}, #{auditorId,jdbcType=BIGINT}, ",
        "#{applierId,jdbcType=BIGINT}, #{score,jdbcType=TINYINT}, ",
        "#{file,jdbcType=VARCHAR}, #{filetypeId,jdbcType=BIGINT})"
    })
    int insert(Userfile record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userfile
     *
     * @mbggenerated
     */
    int insertSelective(Userfile record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userfile
     *
     * @mbggenerated
     */
    List<Userfile> selectByExample(UserfileExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userfile
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "`id`, `state`, `remark`, `auditTime`, `applyTime`, `auditor_id`, `applier_id`, ",
        "`score`, `file`, `filetype_id`",
        "from `userfile`",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    Userfile selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userfile
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Userfile record, @Param("example") UserfileExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userfile
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Userfile record, @Param("example") UserfileExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userfile
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Userfile record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userfile
     *
     * @mbggenerated
     */
    @Update({
        "update `userfile`",
        "set `state` = #{state,jdbcType=TINYINT},",
          "`remark` = #{remark,jdbcType=VARCHAR},",
          "`auditTime` = #{audittime,jdbcType=TIMESTAMP},",
          "`applyTime` = #{applytime,jdbcType=TIMESTAMP},",
          "`auditor_id` = #{auditorId,jdbcType=BIGINT},",
          "`applier_id` = #{applierId,jdbcType=BIGINT},",
          "`score` = #{score,jdbcType=TINYINT},",
          "`file` = #{file,jdbcType=VARCHAR},",
          "`filetype_id` = #{filetypeId,jdbcType=BIGINT}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Userfile record);
}