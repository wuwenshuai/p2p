package cn.carry.mapper;

import cn.carry.domain.Userinfo;
import cn.carry.domain.UserinfoExample;
import org.apache.ibatis.annotations.*;

import java.util.List;

public interface UserinfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    int countByExample(UserinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    int deleteByExample(UserinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `userinfo`",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `userinfo` (`id`, `version`, ",
        "`bitState`, `realName`, ",
        "`idNumber`, `phoneNumber`, ",
        "`incomeGrade_id`, `marriage_id`, ",
        "`kidCount_id`, `educationBackground_id`, ",
        "`authScore`, `houseCondition_id`, ",
        "`realauthid`, `email`)",
        "values (#{id,jdbcType=BIGINT}, #{version,jdbcType=INTEGER}, ",
        "#{bitstate,jdbcType=BIGINT}, #{realname,jdbcType=VARCHAR}, ",
        "#{idnumber,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, ",
        "#{incomegradeId,jdbcType=BIGINT}, #{marriageId,jdbcType=BIGINT}, ",
        "#{kidcountId,jdbcType=BIGINT}, #{educationbackgroundId,jdbcType=BIGINT}, ",
        "#{authscore,jdbcType=INTEGER}, #{houseconditionId,jdbcType=BIGINT}, ",
        "#{realauthid,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR})"
    })
    int insert(Userinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    int insertSelective(Userinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    List<Userinfo> selectByExample(UserinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "`id`, `version`, `bitState`, `realName`, `idNumber`, `phoneNumber`, `incomeGrade_id`, ",
        "`marriage_id`, `kidCount_id`, `educationBackground_id`, `authScore`, `houseCondition_id`, ",
        "`realauthid`, `email`",
        "from `userinfo`",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("BaseResultMap")
    Userinfo selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") Userinfo record, @Param("example") UserinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") Userinfo record, @Param("example") UserinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Userinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    @Update({
        "update `userinfo`",
        "set `version` = #{version,jdbcType=INTEGER},",
          "`bitState` = #{bitstate,jdbcType=BIGINT},",
          "`realName` = #{realname,jdbcType=VARCHAR},",
          "`idNumber` = #{idnumber,jdbcType=VARCHAR},",
          "`phoneNumber` = #{phonenumber,jdbcType=VARCHAR},",
          "`incomeGrade_id` = #{incomegradeId,jdbcType=BIGINT},",
          "`marriage_id` = #{marriageId,jdbcType=BIGINT},",
          "`kidCount_id` = #{kidcountId,jdbcType=BIGINT},",
          "`educationBackground_id` = #{educationbackgroundId,jdbcType=BIGINT},",
          "`authScore` = #{authscore,jdbcType=INTEGER},",
          "`houseCondition_id` = #{houseconditionId,jdbcType=BIGINT},",
          "`realauthid` = #{realauthid,jdbcType=BIGINT},",
          "`email` = #{email,jdbcType=VARCHAR}",
        "where `id` = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Userinfo record);
}